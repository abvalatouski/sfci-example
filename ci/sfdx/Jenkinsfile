#!groovy

node {
    stage('Checkout to HEAD') {
        checkout(scm);
    }

    withCredentials([file(
        credentialsId: env.SERVER_KEY_CREDENTALS_ID,
        variable: 'JWT_KEY_FILE',
    )]) {
        stage('Authorization') {
            command(
                script: """
                    sfdx auth:jwt:grant
                        --clientid ${env.SF_CONSUMER_KEY}
                        --instanceurl ${env.SF_INSTANCE_URL}
                        --jwtkeyfile ${JWT_KEY_FILE}
                        --setdefaultdevhubusername
                        --username ${env.SF_USERNAME}
                """,
                errorMessage: 'Authorization failed',
            );

            command(
                script: """
                    sfdx config:set
                        defaultusername=${env.SF_USERNAME}
                """,
                errorMessage: 'Failed to set default username',
            );
        }
    }

    stage('Test Deployment') {
        command(
            script: """
                sfdx force:source:deploy
                    --checkonly
                    --sourcepath .
                    --verbose
                    --testlevel ${env.SF_TEST_LEVEL}
            """,
            errorMessage: 'Test deployment failed',
        );
    }
}

def command(script, errorMessage) {
    rc = bat(
        returnStatus: true,
        returnStdout: true,
        script: script.replaceAll('[\r\n]', '').trim(),
    );
    if (rc != 0) {
        error(errorMessage);
    }
}
